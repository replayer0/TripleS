// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#ifndef PROTOBUF_packet_2eproto__INCLUDED
#define PROTOBUF_packet_2eproto__INCLUDED

#ifdef _MSC_VER
# pragma warning(push)
# pragma warning(disable: 4127 4244 4267)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_packet_2eproto();
void protobuf_AssignDesc_packet_2eproto();
void protobuf_ShutdownFile_packet_2eproto();

class EchoPacket;
class StringPacket;
class AddPacket;
class AddResultPacket;
class ReqLoginPacket;
class AckLoginPacket;
class InsertUnit;

enum PACKET_TYPE {
  eEchoPacket = 0,
  eStringPacket = 1,
  eAddPacket = 2,
  eAddResultpacket = 3,
  eReqLoginPacket = 4,
  eAckLoginPacket = 5,
  eInsertUnit = 6
};
bool PACKET_TYPE_IsValid(int value);
const PACKET_TYPE PACKET_TYPE_MIN = eEchoPacket;
const PACKET_TYPE PACKET_TYPE_MAX = eInsertUnit;
const int PACKET_TYPE_ARRAYSIZE = PACKET_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PACKET_TYPE_descriptor();
inline const ::std::string& PACKET_TYPE_Name(PACKET_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PACKET_TYPE_descriptor(), value);
}
inline bool PACKET_TYPE_Parse(
    const ::std::string& name, PACKET_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PACKET_TYPE>(
    PACKET_TYPE_descriptor(), name, value);
}
// ===================================================================

class EchoPacket : public ::google::protobuf::Message {
 public:
  EchoPacket();
  virtual ~EchoPacket();

  EchoPacket(const EchoPacket& from);

  inline EchoPacket& operator=(const EchoPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoPacket& default_instance();

  void Swap(EchoPacket* other);

  // implements Message ----------------------------------------------

  EchoPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EchoPacket& from);
  void MergeFrom(const EchoPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:EchoPacket)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static EchoPacket* default_instance_;
};
// -------------------------------------------------------------------

class StringPacket : public ::google::protobuf::Message {
 public:
  StringPacket();
  virtual ~StringPacket();

  StringPacket(const StringPacket& from);

  inline StringPacket& operator=(const StringPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringPacket& default_instance();

  void Swap(StringPacket* other);

  // implements Message ----------------------------------------------

  StringPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringPacket& from);
  void MergeFrom(const StringPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:StringPacket)
 private:
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* str_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static StringPacket* default_instance_;
};
// -------------------------------------------------------------------

class AddPacket : public ::google::protobuf::Message {
 public:
  AddPacket();
  virtual ~AddPacket();

  AddPacket(const AddPacket& from);

  inline AddPacket& operator=(const AddPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddPacket& default_instance();

  void Swap(AddPacket* other);

  // implements Message ----------------------------------------------

  AddPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddPacket& from);
  void MergeFrom(const AddPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 first = 1;
  inline bool has_first() const;
  inline void clear_first();
  static const int kFirstFieldNumber = 1;
  inline ::google::protobuf::int32 first() const;
  inline void set_first(::google::protobuf::int32 value);

  // required int32 second = 2;
  inline bool has_second() const;
  inline void clear_second();
  static const int kSecondFieldNumber = 2;
  inline ::google::protobuf::int32 second() const;
  inline void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AddPacket)
 private:
  inline void set_has_first();
  inline void clear_has_first();
  inline void set_has_second();
  inline void clear_has_second();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 first_;
  ::google::protobuf::int32 second_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static AddPacket* default_instance_;
};
// -------------------------------------------------------------------

class AddResultPacket : public ::google::protobuf::Message {
 public:
  AddResultPacket();
  virtual ~AddResultPacket();

  AddResultPacket(const AddResultPacket& from);

  inline AddResultPacket& operator=(const AddResultPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResultPacket& default_instance();

  void Swap(AddResultPacket* other);

  // implements Message ----------------------------------------------

  AddResultPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddResultPacket& from);
  void MergeFrom(const AddResultPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AddResultPacket)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static AddResultPacket* default_instance_;
};
// -------------------------------------------------------------------

class ReqLoginPacket : public ::google::protobuf::Message {
 public:
  ReqLoginPacket();
  virtual ~ReqLoginPacket();

  ReqLoginPacket(const ReqLoginPacket& from);

  inline ReqLoginPacket& operator=(const ReqLoginPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLoginPacket& default_instance();

  void Swap(ReqLoginPacket* other);

  // implements Message ----------------------------------------------

  ReqLoginPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLoginPacket& from);
  void MergeFrom(const ReqLoginPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:ReqLoginPacket)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static ReqLoginPacket* default_instance_;
};
// -------------------------------------------------------------------

class AckLoginPacket : public ::google::protobuf::Message {
 public:
  AckLoginPacket();
  virtual ~AckLoginPacket();

  AckLoginPacket(const AckLoginPacket& from);

  inline AckLoginPacket& operator=(const AckLoginPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckLoginPacket& default_instance();

  void Swap(AckLoginPacket* other);

  // implements Message ----------------------------------------------

  AckLoginPacket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckLoginPacket& from);
  void MergeFrom(const AckLoginPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AckLoginPacket)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static AckLoginPacket* default_instance_;
};
// -------------------------------------------------------------------

class InsertUnit : public ::google::protobuf::Message {
 public:
  InsertUnit();
  virtual ~InsertUnit();

  InsertUnit(const InsertUnit& from);

  inline InsertUnit& operator=(const InsertUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertUnit& default_instance();

  void Swap(InsertUnit* other);

  // implements Message ----------------------------------------------

  InsertUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InsertUnit& from);
  void MergeFrom(const InsertUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 team = 2;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 2;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // required int32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);

  // required int32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);

  // required int32 pos_z = 5;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 5;
  inline ::google::protobuf::int32 pos_z() const;
  inline void set_pos_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:InsertUnit)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 pos_z_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static InsertUnit* default_instance_;
};
// ===================================================================


// ===================================================================

// EchoPacket

// required int32 id = 1;
inline bool EchoPacket::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EchoPacket::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EchoPacket::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EchoPacket::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EchoPacket::id() const {
  // @@protoc_insertion_point(field_get:EchoPacket.id)
  return id_;
}
inline void EchoPacket::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:EchoPacket.id)
}

// required bytes name = 2;
inline bool EchoPacket::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EchoPacket::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EchoPacket::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EchoPacket::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& EchoPacket::name() const {
  // @@protoc_insertion_point(field_get:EchoPacket.name)
  return *name_;
}
inline void EchoPacket::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:EchoPacket.name)
}
inline void EchoPacket::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:EchoPacket.name)
}
inline void EchoPacket::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:EchoPacket.name)
}
inline ::std::string* EchoPacket::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:EchoPacket.name)
  return name_;
}
inline ::std::string* EchoPacket::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EchoPacket::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:EchoPacket.name)
}

// -------------------------------------------------------------------

// StringPacket

// required string str = 1;
inline bool StringPacket::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringPacket::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringPacket::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringPacket::clear_str() {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& StringPacket::str() const {
  // @@protoc_insertion_point(field_get:StringPacket.str)
  return *str_;
}
inline void StringPacket::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set:StringPacket.str)
}
inline void StringPacket::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(value);
  // @@protoc_insertion_point(field_set_char:StringPacket.str)
}
inline void StringPacket::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:StringPacket.str)
}
inline ::std::string* StringPacket::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:StringPacket.str)
  return str_;
}
inline ::std::string* StringPacket::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StringPacket::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:StringPacket.str)
}

// -------------------------------------------------------------------

// AddPacket

// required int32 first = 1;
inline bool AddPacket::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddPacket::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddPacket::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddPacket::clear_first() {
  first_ = 0;
  clear_has_first();
}
inline ::google::protobuf::int32 AddPacket::first() const {
  // @@protoc_insertion_point(field_get:AddPacket.first)
  return first_;
}
inline void AddPacket::set_first(::google::protobuf::int32 value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:AddPacket.first)
}

// required int32 second = 2;
inline bool AddPacket::has_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddPacket::set_has_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddPacket::clear_has_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddPacket::clear_second() {
  second_ = 0;
  clear_has_second();
}
inline ::google::protobuf::int32 AddPacket::second() const {
  // @@protoc_insertion_point(field_get:AddPacket.second)
  return second_;
}
inline void AddPacket::set_second(::google::protobuf::int32 value) {
  set_has_second();
  second_ = value;
  // @@protoc_insertion_point(field_set:AddPacket.second)
}

// -------------------------------------------------------------------

// AddResultPacket

// required int32 result = 1;
inline bool AddResultPacket::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddResultPacket::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddResultPacket::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddResultPacket::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AddResultPacket::result() const {
  // @@protoc_insertion_point(field_get:AddResultPacket.result)
  return result_;
}
inline void AddResultPacket::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AddResultPacket.result)
}

// -------------------------------------------------------------------

// ReqLoginPacket

// required bytes id = 1;
inline bool ReqLoginPacket::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLoginPacket::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLoginPacket::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLoginPacket::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& ReqLoginPacket::id() const {
  // @@protoc_insertion_point(field_get:ReqLoginPacket.id)
  return *id_;
}
inline void ReqLoginPacket::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:ReqLoginPacket.id)
}
inline void ReqLoginPacket::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:ReqLoginPacket.id)
}
inline void ReqLoginPacket::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ReqLoginPacket.id)
}
inline ::std::string* ReqLoginPacket::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ReqLoginPacket.id)
  return id_;
}
inline ::std::string* ReqLoginPacket::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqLoginPacket::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ReqLoginPacket.id)
}

// -------------------------------------------------------------------

// AckLoginPacket

// required bytes id = 1;
inline bool AckLoginPacket::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckLoginPacket::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckLoginPacket::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckLoginPacket::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& AckLoginPacket::id() const {
  // @@protoc_insertion_point(field_get:AckLoginPacket.id)
  return *id_;
}
inline void AckLoginPacket::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:AckLoginPacket.id)
}
inline void AckLoginPacket::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:AckLoginPacket.id)
}
inline void AckLoginPacket::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:AckLoginPacket.id)
}
inline ::std::string* AckLoginPacket::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:AckLoginPacket.id)
  return id_;
}
inline ::std::string* AckLoginPacket::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AckLoginPacket::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:AckLoginPacket.id)
}

// required int32 result = 2;
inline bool AckLoginPacket::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckLoginPacket::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckLoginPacket::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckLoginPacket::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 AckLoginPacket::result() const {
  // @@protoc_insertion_point(field_get:AckLoginPacket.result)
  return result_;
}
inline void AckLoginPacket::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:AckLoginPacket.result)
}

// -------------------------------------------------------------------

// InsertUnit

// required int32 type = 1;
inline bool InsertUnit::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InsertUnit::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InsertUnit::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InsertUnit::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 InsertUnit::type() const {
  // @@protoc_insertion_point(field_get:InsertUnit.type)
  return type_;
}
inline void InsertUnit::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:InsertUnit.type)
}

// required int32 team = 2;
inline bool InsertUnit::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InsertUnit::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InsertUnit::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InsertUnit::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 InsertUnit::team() const {
  // @@protoc_insertion_point(field_get:InsertUnit.team)
  return team_;
}
inline void InsertUnit::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:InsertUnit.team)
}

// required int32 pos_x = 3;
inline bool InsertUnit::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InsertUnit::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InsertUnit::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InsertUnit::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 InsertUnit::pos_x() const {
  // @@protoc_insertion_point(field_get:InsertUnit.pos_x)
  return pos_x_;
}
inline void InsertUnit::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:InsertUnit.pos_x)
}

// required int32 pos_y = 4;
inline bool InsertUnit::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InsertUnit::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InsertUnit::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InsertUnit::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 InsertUnit::pos_y() const {
  // @@protoc_insertion_point(field_get:InsertUnit.pos_y)
  return pos_y_;
}
inline void InsertUnit::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:InsertUnit.pos_y)
}

// required int32 pos_z = 5;
inline bool InsertUnit::has_pos_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InsertUnit::set_has_pos_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InsertUnit::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InsertUnit::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline ::google::protobuf::int32 InsertUnit::pos_z() const {
  // @@protoc_insertion_point(field_get:InsertUnit.pos_z)
  return pos_z_;
}
inline void InsertUnit::set_pos_z(::google::protobuf::int32 value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:InsertUnit.pos_z)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PACKET_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PACKET_TYPE>() {
  return ::PACKET_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
# pragma warning(pop)
#endif

#endif  // PROTOBUF_packet_2eproto__INCLUDED
