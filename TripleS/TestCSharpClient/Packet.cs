// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class Packet {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_EchoPacket__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::EchoPacket, global::EchoPacket.Builder> internal__static_EchoPacket__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StringPacket__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StringPacket, global::StringPacket.Builder> internal__static_StringPacket__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AddPacket__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AddPacket, global::AddPacket.Builder> internal__static_AddPacket__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AddResultPacket__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AddResultPacket, global::AddResultPacket.Builder> internal__static_AddResultPacket__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static Packet() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "CgxwYWNrZXQucHJvdG8iJgoKRWNob1BhY2tldBIKCgJpZBgBIAIoBRIMCgRu" + 
        "YW1lGAIgAigMIhsKDFN0cmluZ1BhY2tldBILCgNzdHIYASACKAkiKgoJQWRk" + 
        "UGFja2V0Eg0KBWZpcnN0GAEgAigFEg4KBnNlY29uZBgCIAIoBSIhCg9BZGRS" + 
        "ZXN1bHRQYWNrZXQSDgoGcmVzdWx0GAEgAigFKlcKC1BBQ0tFVF9UWVBFEg8K" + 
        "C2VFY2hvUGFja2V0EAASEQoNZVN0cmluZ1BhY2tldBABEg4KCmVBZGRQYWNr" + 
        "ZXQQAhIUChBlQWRkUmVzdWx0cGFja2V0EAM=");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_EchoPacket__Descriptor = Descriptor.MessageTypes[0];
      internal__static_EchoPacket__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::EchoPacket, global::EchoPacket.Builder>(internal__static_EchoPacket__Descriptor,
              new string[] { "Id", "Name", });
      internal__static_StringPacket__Descriptor = Descriptor.MessageTypes[1];
      internal__static_StringPacket__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StringPacket, global::StringPacket.Builder>(internal__static_StringPacket__Descriptor,
              new string[] { "Str", });
      internal__static_AddPacket__Descriptor = Descriptor.MessageTypes[2];
      internal__static_AddPacket__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AddPacket, global::AddPacket.Builder>(internal__static_AddPacket__Descriptor,
              new string[] { "First", "Second", });
      internal__static_AddResultPacket__Descriptor = Descriptor.MessageTypes[3];
      internal__static_AddResultPacket__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AddResultPacket, global::AddResultPacket.Builder>(internal__static_AddResultPacket__Descriptor,
              new string[] { "Result", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum PACKET_TYPE {
  eEchoPacket = 0,
  eStringPacket = 1,
  eAddPacket = 2,
  eAddResultpacket = 3,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class EchoPacket : pb::GeneratedMessage<EchoPacket, EchoPacket.Builder> {
  private EchoPacket() { }
  private static readonly EchoPacket defaultInstance = new EchoPacket().MakeReadOnly();
  private static readonly string[] _echoPacketFieldNames = new string[] { "id", "name" };
  private static readonly uint[] _echoPacketFieldTags = new uint[] { 8, 18 };
  public static EchoPacket DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override EchoPacket DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override EchoPacket ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Packet.internal__static_EchoPacket__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<EchoPacket, EchoPacket.Builder> InternalFieldAccessors {
    get { return global::Packet.internal__static_EchoPacket__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private pb::ByteString name_ = pb::ByteString.Empty;
  public bool HasName {
    get { return hasName; }
  }
  public pb::ByteString Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasId) return false;
      if (!hasName) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _echoPacketFieldNames;
    if (hasId) {
      output.WriteInt32(1, field_names[0], Id);
    }
    if (hasName) {
      output.WriteBytes(2, field_names[1], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static EchoPacket ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static EchoPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static EchoPacket ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static EchoPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static EchoPacket ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static EchoPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static EchoPacket ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static EchoPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static EchoPacket ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static EchoPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private EchoPacket MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(EchoPacket prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<EchoPacket, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(EchoPacket cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private EchoPacket result;
    
    private EchoPacket PrepareBuilder() {
      if (resultIsReadOnly) {
        EchoPacket original = result;
        result = new EchoPacket();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override EchoPacket MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::EchoPacket.Descriptor; }
    }
    
    public override EchoPacket DefaultInstanceForType {
      get { return global::EchoPacket.DefaultInstance; }
    }
    
    public override EchoPacket BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is EchoPacket) {
        return MergeFrom((EchoPacket) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(EchoPacket other) {
      if (other == global::EchoPacket.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_echoPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _echoPacketFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 18: {
            result.hasName = input.ReadBytes(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public pb::ByteString Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = pb::ByteString.Empty;
      return this;
    }
  }
  static EchoPacket() {
    object.ReferenceEquals(global::Packet.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StringPacket : pb::GeneratedMessage<StringPacket, StringPacket.Builder> {
  private StringPacket() { }
  private static readonly StringPacket defaultInstance = new StringPacket().MakeReadOnly();
  private static readonly string[] _stringPacketFieldNames = new string[] { "str" };
  private static readonly uint[] _stringPacketFieldTags = new uint[] { 10 };
  public static StringPacket DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StringPacket DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StringPacket ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Packet.internal__static_StringPacket__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StringPacket, StringPacket.Builder> InternalFieldAccessors {
    get { return global::Packet.internal__static_StringPacket__FieldAccessorTable; }
  }
  
  public const int StrFieldNumber = 1;
  private bool hasStr;
  private string str_ = "";
  public bool HasStr {
    get { return hasStr; }
  }
  public string Str {
    get { return str_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasStr) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _stringPacketFieldNames;
    if (hasStr) {
      output.WriteString(1, field_names[0], Str);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStr) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Str);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StringPacket ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StringPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StringPacket ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StringPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StringPacket ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StringPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StringPacket ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StringPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StringPacket ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StringPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StringPacket MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StringPacket prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StringPacket, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StringPacket cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StringPacket result;
    
    private StringPacket PrepareBuilder() {
      if (resultIsReadOnly) {
        StringPacket original = result;
        result = new StringPacket();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StringPacket MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StringPacket.Descriptor; }
    }
    
    public override StringPacket DefaultInstanceForType {
      get { return global::StringPacket.DefaultInstance; }
    }
    
    public override StringPacket BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StringPacket) {
        return MergeFrom((StringPacket) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StringPacket other) {
      if (other == global::StringPacket.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStr) {
        Str = other.Str;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_stringPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _stringPacketFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasStr = input.ReadString(ref result.str_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStr {
      get { return result.hasStr; }
    }
    public string Str {
      get { return result.Str; }
      set { SetStr(value); }
    }
    public Builder SetStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStr = true;
      result.str_ = value;
      return this;
    }
    public Builder ClearStr() {
      PrepareBuilder();
      result.hasStr = false;
      result.str_ = "";
      return this;
    }
  }
  static StringPacket() {
    object.ReferenceEquals(global::Packet.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class AddPacket : pb::GeneratedMessage<AddPacket, AddPacket.Builder> {
  private AddPacket() { }
  private static readonly AddPacket defaultInstance = new AddPacket().MakeReadOnly();
  private static readonly string[] _addPacketFieldNames = new string[] { "first", "second" };
  private static readonly uint[] _addPacketFieldTags = new uint[] { 8, 16 };
  public static AddPacket DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override AddPacket DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override AddPacket ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Packet.internal__static_AddPacket__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<AddPacket, AddPacket.Builder> InternalFieldAccessors {
    get { return global::Packet.internal__static_AddPacket__FieldAccessorTable; }
  }
  
  public const int FirstFieldNumber = 1;
  private bool hasFirst;
  private int first_;
  public bool HasFirst {
    get { return hasFirst; }
  }
  public int First {
    get { return first_; }
  }
  
  public const int SecondFieldNumber = 2;
  private bool hasSecond;
  private int second_;
  public bool HasSecond {
    get { return hasSecond; }
  }
  public int Second {
    get { return second_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasFirst) return false;
      if (!hasSecond) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _addPacketFieldNames;
    if (hasFirst) {
      output.WriteInt32(1, field_names[0], First);
    }
    if (hasSecond) {
      output.WriteInt32(2, field_names[1], Second);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFirst) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, First);
      }
      if (hasSecond) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Second);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static AddPacket ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AddPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AddPacket ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AddPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AddPacket ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AddPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static AddPacket ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static AddPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static AddPacket ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AddPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private AddPacket MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(AddPacket prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<AddPacket, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(AddPacket cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private AddPacket result;
    
    private AddPacket PrepareBuilder() {
      if (resultIsReadOnly) {
        AddPacket original = result;
        result = new AddPacket();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override AddPacket MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::AddPacket.Descriptor; }
    }
    
    public override AddPacket DefaultInstanceForType {
      get { return global::AddPacket.DefaultInstance; }
    }
    
    public override AddPacket BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is AddPacket) {
        return MergeFrom((AddPacket) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(AddPacket other) {
      if (other == global::AddPacket.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFirst) {
        First = other.First;
      }
      if (other.HasSecond) {
        Second = other.Second;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_addPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _addPacketFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFirst = input.ReadInt32(ref result.first_);
            break;
          }
          case 16: {
            result.hasSecond = input.ReadInt32(ref result.second_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFirst {
      get { return result.hasFirst; }
    }
    public int First {
      get { return result.First; }
      set { SetFirst(value); }
    }
    public Builder SetFirst(int value) {
      PrepareBuilder();
      result.hasFirst = true;
      result.first_ = value;
      return this;
    }
    public Builder ClearFirst() {
      PrepareBuilder();
      result.hasFirst = false;
      result.first_ = 0;
      return this;
    }
    
    public bool HasSecond {
      get { return result.hasSecond; }
    }
    public int Second {
      get { return result.Second; }
      set { SetSecond(value); }
    }
    public Builder SetSecond(int value) {
      PrepareBuilder();
      result.hasSecond = true;
      result.second_ = value;
      return this;
    }
    public Builder ClearSecond() {
      PrepareBuilder();
      result.hasSecond = false;
      result.second_ = 0;
      return this;
    }
  }
  static AddPacket() {
    object.ReferenceEquals(global::Packet.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class AddResultPacket : pb::GeneratedMessage<AddResultPacket, AddResultPacket.Builder> {
  private AddResultPacket() { }
  private static readonly AddResultPacket defaultInstance = new AddResultPacket().MakeReadOnly();
  private static readonly string[] _addResultPacketFieldNames = new string[] { "result" };
  private static readonly uint[] _addResultPacketFieldTags = new uint[] { 8 };
  public static AddResultPacket DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override AddResultPacket DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override AddResultPacket ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Packet.internal__static_AddResultPacket__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<AddResultPacket, AddResultPacket.Builder> InternalFieldAccessors {
    get { return global::Packet.internal__static_AddResultPacket__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasResult) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _addResultPacketFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[0], Result);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static AddResultPacket ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static AddResultPacket ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static AddResultPacket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static AddResultPacket ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AddResultPacket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private AddResultPacket MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(AddResultPacket prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<AddResultPacket, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(AddResultPacket cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private AddResultPacket result;
    
    private AddResultPacket PrepareBuilder() {
      if (resultIsReadOnly) {
        AddResultPacket original = result;
        result = new AddResultPacket();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override AddResultPacket MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::AddResultPacket.Descriptor; }
    }
    
    public override AddResultPacket DefaultInstanceForType {
      get { return global::AddResultPacket.DefaultInstance; }
    }
    
    public override AddResultPacket BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is AddResultPacket) {
        return MergeFrom((AddResultPacket) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(AddResultPacket other) {
      if (other == global::AddResultPacket.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_addResultPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _addResultPacketFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
  }
  static AddResultPacket() {
    object.ReferenceEquals(global::Packet.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
