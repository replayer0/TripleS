// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#ifndef PROTOBUF_packet_2eproto__INCLUDED
#define PROTOBUF_packet_2eproto__INCLUDED

#ifdef _MSC_VER
# pragma warning(push)
# pragma warning(disable: 4127 4244 4267)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PACKET {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_packet_2eproto();
void protobuf_AssignDesc_packet_2eproto();
void protobuf_ShutdownFile_packet_2eproto();

class Position;
class CS_LOGIN_REQ;
class SC_LOGIN_ACK;
class SC_INSERT_UNIT_ACK;
class SC_REMOVE_UNIT_ACK;
class SC_MOVE_UNIT_ACK;

enum PACKET_TYPE {
  eCS_LOGIN_REQ = 1,
  eSC_LOGIN_ACK = 2,
  eCS_INSERT_UNIT_REQ = 200,
  eSC_INSERT_UNIT_ACK = 201,
  eCS_REMOVE_UNIT_REQ = 202,
  eSC_REMOVE_UNIT_ACK = 203,
  eCS_MOVE_UNIT_REQ = 204,
  eSC_MOVE_UNIT_ACK = 205,
  eCS_CHANGE_UNIT_REQ = 210,
  eSC_CHANGE_UNIT_ACK = 211
};
bool PACKET_TYPE_IsValid(int value);
const PACKET_TYPE PACKET_TYPE_MIN = eCS_LOGIN_REQ;
const PACKET_TYPE PACKET_TYPE_MAX = eSC_CHANGE_UNIT_ACK;
const int PACKET_TYPE_ARRAYSIZE = PACKET_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PACKET_TYPE_descriptor();
inline const ::std::string& PACKET_TYPE_Name(PACKET_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PACKET_TYPE_descriptor(), value);
}
inline bool PACKET_TYPE_Parse(
    const ::std::string& name, PACKET_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PACKET_TYPE>(
    PACKET_TYPE_descriptor(), name, value);
}
// ===================================================================

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  Position* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // required int32 z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PACKET.Position)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class CS_LOGIN_REQ : public ::google::protobuf::Message {
 public:
  CS_LOGIN_REQ();
  virtual ~CS_LOGIN_REQ();

  CS_LOGIN_REQ(const CS_LOGIN_REQ& from);

  inline CS_LOGIN_REQ& operator=(const CS_LOGIN_REQ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LOGIN_REQ& default_instance();

  void Swap(CS_LOGIN_REQ* other);

  // implements Message ----------------------------------------------

  CS_LOGIN_REQ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_LOGIN_REQ& from);
  void MergeFrom(const CS_LOGIN_REQ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:PACKET.CS_LOGIN_REQ)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static CS_LOGIN_REQ* default_instance_;
};
// -------------------------------------------------------------------

class SC_LOGIN_ACK : public ::google::protobuf::Message {
 public:
  SC_LOGIN_ACK();
  virtual ~SC_LOGIN_ACK();

  SC_LOGIN_ACK(const SC_LOGIN_ACK& from);

  inline SC_LOGIN_ACK& operator=(const SC_LOGIN_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LOGIN_ACK& default_instance();

  void Swap(SC_LOGIN_ACK* other);

  // implements Message ----------------------------------------------

  SC_LOGIN_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_LOGIN_ACK& from);
  void MergeFrom(const SC_LOGIN_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PACKET.SC_LOGIN_ACK)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static SC_LOGIN_ACK* default_instance_;
};
// -------------------------------------------------------------------

class SC_INSERT_UNIT_ACK : public ::google::protobuf::Message {
 public:
  SC_INSERT_UNIT_ACK();
  virtual ~SC_INSERT_UNIT_ACK();

  SC_INSERT_UNIT_ACK(const SC_INSERT_UNIT_ACK& from);

  inline SC_INSERT_UNIT_ACK& operator=(const SC_INSERT_UNIT_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_INSERT_UNIT_ACK& default_instance();

  void Swap(SC_INSERT_UNIT_ACK* other);

  // implements Message ----------------------------------------------

  SC_INSERT_UNIT_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_INSERT_UNIT_ACK& from);
  void MergeFrom(const SC_INSERT_UNIT_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 object_key = 1;
  inline bool has_object_key() const;
  inline void clear_object_key();
  static const int kObjectKeyFieldNumber = 1;
  inline ::google::protobuf::int32 object_key() const;
  inline void set_object_key(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 team = 3;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // required .PACKET.Position position = 4;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 4;
  inline const ::PACKET::Position& position() const;
  inline ::PACKET::Position* mutable_position();
  inline ::PACKET::Position* release_position();
  inline void set_allocated_position(::PACKET::Position* position);

  // @@protoc_insertion_point(class_scope:PACKET.SC_INSERT_UNIT_ACK)
 private:
  inline void set_has_object_key();
  inline void clear_has_object_key();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 object_key_;
  ::google::protobuf::int32 type_;
  ::PACKET::Position* position_;
  ::google::protobuf::int32 team_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static SC_INSERT_UNIT_ACK* default_instance_;
};
// -------------------------------------------------------------------

class SC_REMOVE_UNIT_ACK : public ::google::protobuf::Message {
 public:
  SC_REMOVE_UNIT_ACK();
  virtual ~SC_REMOVE_UNIT_ACK();

  SC_REMOVE_UNIT_ACK(const SC_REMOVE_UNIT_ACK& from);

  inline SC_REMOVE_UNIT_ACK& operator=(const SC_REMOVE_UNIT_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_REMOVE_UNIT_ACK& default_instance();

  void Swap(SC_REMOVE_UNIT_ACK* other);

  // implements Message ----------------------------------------------

  SC_REMOVE_UNIT_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_REMOVE_UNIT_ACK& from);
  void MergeFrom(const SC_REMOVE_UNIT_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 object_key = 1;
  inline bool has_object_key() const;
  inline void clear_object_key();
  static const int kObjectKeyFieldNumber = 1;
  inline ::google::protobuf::int32 object_key() const;
  inline void set_object_key(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PACKET.SC_REMOVE_UNIT_ACK)
 private:
  inline void set_has_object_key();
  inline void clear_has_object_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 object_key_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static SC_REMOVE_UNIT_ACK* default_instance_;
};
// -------------------------------------------------------------------

class SC_MOVE_UNIT_ACK : public ::google::protobuf::Message {
 public:
  SC_MOVE_UNIT_ACK();
  virtual ~SC_MOVE_UNIT_ACK();

  SC_MOVE_UNIT_ACK(const SC_MOVE_UNIT_ACK& from);

  inline SC_MOVE_UNIT_ACK& operator=(const SC_MOVE_UNIT_ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_MOVE_UNIT_ACK& default_instance();

  void Swap(SC_MOVE_UNIT_ACK* other);

  // implements Message ----------------------------------------------

  SC_MOVE_UNIT_ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_MOVE_UNIT_ACK& from);
  void MergeFrom(const SC_MOVE_UNIT_ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 object_key = 1;
  inline bool has_object_key() const;
  inline void clear_object_key();
  static const int kObjectKeyFieldNumber = 1;
  inline ::google::protobuf::int32 object_key() const;
  inline void set_object_key(::google::protobuf::int32 value);

  // required int32 move_type = 2;
  inline bool has_move_type() const;
  inline void clear_move_type();
  static const int kMoveTypeFieldNumber = 2;
  inline ::google::protobuf::int32 move_type() const;
  inline void set_move_type(::google::protobuf::int32 value);

  // required .PACKET.Position position = 3;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 3;
  inline const ::PACKET::Position& position() const;
  inline ::PACKET::Position* mutable_position();
  inline ::PACKET::Position* release_position();
  inline void set_allocated_position(::PACKET::Position* position);

  // @@protoc_insertion_point(class_scope:PACKET.SC_MOVE_UNIT_ACK)
 private:
  inline void set_has_object_key();
  inline void clear_has_object_key();
  inline void set_has_move_type();
  inline void clear_has_move_type();
  inline void set_has_position();
  inline void clear_has_position();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 object_key_;
  ::google::protobuf::int32 move_type_;
  ::PACKET::Position* position_;
  friend void  protobuf_AddDesc_packet_2eproto();
  friend void protobuf_AssignDesc_packet_2eproto();
  friend void protobuf_ShutdownFile_packet_2eproto();

  void InitAsDefaultInstance();
  static SC_MOVE_UNIT_ACK* default_instance_;
};
// ===================================================================


// ===================================================================

// Position

// required int32 x = 1;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Position::x() const {
  // @@protoc_insertion_point(field_get:PACKET.Position.x)
  return x_;
}
inline void Position::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PACKET.Position.x)
}

// required int32 y = 2;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Position::y() const {
  // @@protoc_insertion_point(field_get:PACKET.Position.y)
  return y_;
}
inline void Position::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PACKET.Position.y)
}

// required int32 z = 3;
inline bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Position::z() const {
  // @@protoc_insertion_point(field_get:PACKET.Position.z)
  return z_;
}
inline void Position::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:PACKET.Position.z)
}

// -------------------------------------------------------------------

// CS_LOGIN_REQ

// required bytes id = 1;
inline bool CS_LOGIN_REQ::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CS_LOGIN_REQ::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CS_LOGIN_REQ::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CS_LOGIN_REQ::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& CS_LOGIN_REQ::id() const {
  // @@protoc_insertion_point(field_get:PACKET.CS_LOGIN_REQ.id)
  return *id_;
}
inline void CS_LOGIN_REQ::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:PACKET.CS_LOGIN_REQ.id)
}
inline void CS_LOGIN_REQ::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:PACKET.CS_LOGIN_REQ.id)
}
inline void CS_LOGIN_REQ::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PACKET.CS_LOGIN_REQ.id)
}
inline ::std::string* CS_LOGIN_REQ::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PACKET.CS_LOGIN_REQ.id)
  return id_;
}
inline ::std::string* CS_LOGIN_REQ::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CS_LOGIN_REQ::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PACKET.CS_LOGIN_REQ.id)
}

// -------------------------------------------------------------------

// SC_LOGIN_ACK

// required bytes id = 1;
inline bool SC_LOGIN_ACK::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_LOGIN_ACK::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_LOGIN_ACK::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_LOGIN_ACK::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& SC_LOGIN_ACK::id() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_LOGIN_ACK.id)
  return *id_;
}
inline void SC_LOGIN_ACK::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:PACKET.SC_LOGIN_ACK.id)
}
inline void SC_LOGIN_ACK::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:PACKET.SC_LOGIN_ACK.id)
}
inline void SC_LOGIN_ACK::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PACKET.SC_LOGIN_ACK.id)
}
inline ::std::string* SC_LOGIN_ACK::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PACKET.SC_LOGIN_ACK.id)
  return id_;
}
inline ::std::string* SC_LOGIN_ACK::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SC_LOGIN_ACK::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PACKET.SC_LOGIN_ACK.id)
}

// required int32 result = 2;
inline bool SC_LOGIN_ACK::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_LOGIN_ACK::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_LOGIN_ACK::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_LOGIN_ACK::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 SC_LOGIN_ACK::result() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_LOGIN_ACK.result)
  return result_;
}
inline void SC_LOGIN_ACK::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_LOGIN_ACK.result)
}

// -------------------------------------------------------------------

// SC_INSERT_UNIT_ACK

// required int32 object_key = 1;
inline bool SC_INSERT_UNIT_ACK::has_object_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_INSERT_UNIT_ACK::set_has_object_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_INSERT_UNIT_ACK::clear_has_object_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_INSERT_UNIT_ACK::clear_object_key() {
  object_key_ = 0;
  clear_has_object_key();
}
inline ::google::protobuf::int32 SC_INSERT_UNIT_ACK::object_key() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_INSERT_UNIT_ACK.object_key)
  return object_key_;
}
inline void SC_INSERT_UNIT_ACK::set_object_key(::google::protobuf::int32 value) {
  set_has_object_key();
  object_key_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_INSERT_UNIT_ACK.object_key)
}

// required int32 type = 2;
inline bool SC_INSERT_UNIT_ACK::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_INSERT_UNIT_ACK::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_INSERT_UNIT_ACK::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_INSERT_UNIT_ACK::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SC_INSERT_UNIT_ACK::type() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_INSERT_UNIT_ACK.type)
  return type_;
}
inline void SC_INSERT_UNIT_ACK::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_INSERT_UNIT_ACK.type)
}

// required int32 team = 3;
inline bool SC_INSERT_UNIT_ACK::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_INSERT_UNIT_ACK::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_INSERT_UNIT_ACK::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_INSERT_UNIT_ACK::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 SC_INSERT_UNIT_ACK::team() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_INSERT_UNIT_ACK.team)
  return team_;
}
inline void SC_INSERT_UNIT_ACK::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_INSERT_UNIT_ACK.team)
}

// required .PACKET.Position position = 4;
inline bool SC_INSERT_UNIT_ACK::has_position() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SC_INSERT_UNIT_ACK::set_has_position() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SC_INSERT_UNIT_ACK::clear_has_position() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SC_INSERT_UNIT_ACK::clear_position() {
  if (position_ != NULL) position_->::PACKET::Position::Clear();
  clear_has_position();
}
inline const ::PACKET::Position& SC_INSERT_UNIT_ACK::position() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_INSERT_UNIT_ACK.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::PACKET::Position* SC_INSERT_UNIT_ACK::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::PACKET::Position;
  // @@protoc_insertion_point(field_mutable:PACKET.SC_INSERT_UNIT_ACK.position)
  return position_;
}
inline ::PACKET::Position* SC_INSERT_UNIT_ACK::release_position() {
  clear_has_position();
  ::PACKET::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SC_INSERT_UNIT_ACK::set_allocated_position(::PACKET::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:PACKET.SC_INSERT_UNIT_ACK.position)
}

// -------------------------------------------------------------------

// SC_REMOVE_UNIT_ACK

// required int32 object_key = 1;
inline bool SC_REMOVE_UNIT_ACK::has_object_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_REMOVE_UNIT_ACK::set_has_object_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_REMOVE_UNIT_ACK::clear_has_object_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_REMOVE_UNIT_ACK::clear_object_key() {
  object_key_ = 0;
  clear_has_object_key();
}
inline ::google::protobuf::int32 SC_REMOVE_UNIT_ACK::object_key() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_REMOVE_UNIT_ACK.object_key)
  return object_key_;
}
inline void SC_REMOVE_UNIT_ACK::set_object_key(::google::protobuf::int32 value) {
  set_has_object_key();
  object_key_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_REMOVE_UNIT_ACK.object_key)
}

// -------------------------------------------------------------------

// SC_MOVE_UNIT_ACK

// required int32 object_key = 1;
inline bool SC_MOVE_UNIT_ACK::has_object_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SC_MOVE_UNIT_ACK::set_has_object_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SC_MOVE_UNIT_ACK::clear_has_object_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SC_MOVE_UNIT_ACK::clear_object_key() {
  object_key_ = 0;
  clear_has_object_key();
}
inline ::google::protobuf::int32 SC_MOVE_UNIT_ACK::object_key() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_MOVE_UNIT_ACK.object_key)
  return object_key_;
}
inline void SC_MOVE_UNIT_ACK::set_object_key(::google::protobuf::int32 value) {
  set_has_object_key();
  object_key_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_MOVE_UNIT_ACK.object_key)
}

// required int32 move_type = 2;
inline bool SC_MOVE_UNIT_ACK::has_move_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SC_MOVE_UNIT_ACK::set_has_move_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SC_MOVE_UNIT_ACK::clear_has_move_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SC_MOVE_UNIT_ACK::clear_move_type() {
  move_type_ = 0;
  clear_has_move_type();
}
inline ::google::protobuf::int32 SC_MOVE_UNIT_ACK::move_type() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_MOVE_UNIT_ACK.move_type)
  return move_type_;
}
inline void SC_MOVE_UNIT_ACK::set_move_type(::google::protobuf::int32 value) {
  set_has_move_type();
  move_type_ = value;
  // @@protoc_insertion_point(field_set:PACKET.SC_MOVE_UNIT_ACK.move_type)
}

// required .PACKET.Position position = 3;
inline bool SC_MOVE_UNIT_ACK::has_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SC_MOVE_UNIT_ACK::set_has_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SC_MOVE_UNIT_ACK::clear_has_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SC_MOVE_UNIT_ACK::clear_position() {
  if (position_ != NULL) position_->::PACKET::Position::Clear();
  clear_has_position();
}
inline const ::PACKET::Position& SC_MOVE_UNIT_ACK::position() const {
  // @@protoc_insertion_point(field_get:PACKET.SC_MOVE_UNIT_ACK.position)
  return position_ != NULL ? *position_ : *default_instance_->position_;
}
inline ::PACKET::Position* SC_MOVE_UNIT_ACK::mutable_position() {
  set_has_position();
  if (position_ == NULL) position_ = new ::PACKET::Position;
  // @@protoc_insertion_point(field_mutable:PACKET.SC_MOVE_UNIT_ACK.position)
  return position_;
}
inline ::PACKET::Position* SC_MOVE_UNIT_ACK::release_position() {
  clear_has_position();
  ::PACKET::Position* temp = position_;
  position_ = NULL;
  return temp;
}
inline void SC_MOVE_UNIT_ACK::set_allocated_position(::PACKET::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:PACKET.SC_MOVE_UNIT_ACK.position)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PACKET

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PACKET::PACKET_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PACKET::PACKET_TYPE>() {
  return ::PACKET::PACKET_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#ifdef _MSC_VER
# pragma warning(pop)
#endif

#endif  // PROTOBUF_packet_2eproto__INCLUDED
